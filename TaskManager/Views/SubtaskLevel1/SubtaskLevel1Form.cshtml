@model TaskManager.ViewModels.SubtaskLevel1ViewModel
@{
    ViewBag.Title = "SubtaskLevel1Form";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Sub Task</h2>
<hr/>

@using (Html.BeginForm("Save", "SubtaskLevel1", FormMethod.Post, new { @class = "form-style-2" }))
{
    @Html.ValidationSummary(true, "Please fix the following errors.")
    <label for="Order">
        <span>
            Order
            <span class="required">*</span>
        </span>
        @Html.TextBoxFor(s => s.Order, new { @class = "form-control" })
        @Html.ValidationMessageFor(s => s.Order)
    </label>
    <label for="SubTaskName">
        <span>
            Name
            <span class="required">*</span>
        </span>
        @Html.TextBoxFor(s => s.SubTaskName, new { @class = "form-control" })
        @Html.ValidationMessageFor(s => s.SubTaskName)
    </label>
    <label for="SubTaskDescription">
        <span>
            Description
            <span class="required">*</span>
        </span>
        @Html.TextAreaFor(s => s.SubTaskDescription, new { @class = "form-control" })
        @Html.ValidationMessageFor(s => s.SubTaskDescription)
    </label>
    <label for="PriceId">
        <span>Price</span>
        @Html.DropDownListFor(s => s.PriceId, new SelectList(Model.Prices, "PriceId", "Amount"), "", new { @class = "form-control" })
        @Html.ValidationMessageFor(s => s.PriceId)
    </label>
    <label for="MemberId">
        <span>Assign To</span>
        @Html.DropDownListFor(s => s.MemberId, new SelectList(Model.Members, "MemberId", "LastName"), "", new { @class = "form-control" })
        @Html.ValidationMessageFor(s => s.MemberId)
    </label>
    <label for="DateCreated">
        <span>Date Created</span>
        @Html.TextBoxFor(t => t.DateCreated, "{0:dd/MM/yyyy}", new { @class = "form-control" })
        @Html.ValidationMessageFor(t => t.DateCreated)
    </label>
    <label for="Hours">
        <span>Hours Required</span>
        @Html.TextBoxFor(t => t.Hours, new { @class = "form-control" })
        @Html.ValidationMessageFor(t => t.Hours)
    </label>
    @Html.HiddenFor(t => t.SubTaskId)
    @Html.HiddenFor(t => t.TaskId)
    @Html.AntiForgeryToken()
    <button type="submit" class="btn btn-primary">Save</button>
}

<hr/>
<h4>Steps</h4>

<p>
    @Html.ActionLink("New Step", "New", "TaskProcedures", new { taskId = Model.TaskId, subtaskId = Model.SubTaskId }, new { @class = "btn btn-primary" })
</p>

<table id="taskSteps" class="table table-bordered table-hover">
    <thead>
        <tr>
            <th> </th>
            <th>Order</th>
            <th>Name</th>
            <th>Steps</th>
            <th>Video</th>        
            <th> </th>
        </tr>
    </thead>
    <tbody></tbody>
</table>
<br />
<hr />

@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function () {
            var table = $("#taskSteps").DataTable({

                "paging": false,
                "ordering": true,
                "info": false,
                "searching": false,
                "order": [[0, "asc"]],

                ajax: {
                    url: "/api/taskprocedures",
                    dataSrc: ""
                },

                columns: [
                    {
                        data: "TaskProcedureId",
                        render: function (data, type, taskProc) {
                            return "<a class='btn btn-primary btn-xs' href='/taskprocedures/edit/" + data + "'> View </a>";
                        }
                    },
                    {
                        data: "TaskProcedureOrder"
                    },
                    {
                        data: "TaskProcedureDescription"                        
                    },
                    {
                        data: "TaskSteps"
                    },
                    {
                        data: "TaskVideoFile"
                    },
                    {
                        data: "TaskProcedureId",
                        render: function (data) {
                            return "<button class='js-delete btn btn-primary btn-xs' data-taskprocedure-id=" + data + ">Delete</button>";
                        }
                    }
                ]
            });

            $("#taskSteps").on("click", ".js-delete", function () {
                var button = $(this);

                bootbox.confirm("Are you sure you want to delete this step?", function (result) {
                    if (result) {
                        $.ajax({
                            url: "/api/taskprocedures/" + button.attr("data-taskprocedure-id"),
                            method: "DELETE",
                            success: function () {
                                table.row(button.parents("tr")).remove().draw();
                            }
                        });
                    }
                });
            });
        });
    </script>
}