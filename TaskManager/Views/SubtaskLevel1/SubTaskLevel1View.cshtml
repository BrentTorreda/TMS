@model TaskManager.ViewModels.SubtaskLevel1ViewModel
@{
    ViewBag.Title = "SubtaskLevel1FView";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>@Model.SubTaskName</h2>
<hr />

<h5></h5>Procedure</h5>

<table id="taskSteps" class="table table-striped table-hover">
    <thead>
        <tr>
            <th> </th>
            <th>Name</th>
            <th>Description</th>
            <th>Video</th>
        </tr>
    </thead>
    <tbody></tbody>
</table>
<br />
<hr />

@using (Html.BeginForm("SaveWork", "SubtaskLevel1", FormMethod.Post))
{
    @Html.ValidationSummary(true, "Please fix the following errors.")

    <div class="form-group" width="100%">
        <label for="Notes">Notes</label>
        @Html.TextAreaFor(s => s.Notes, new { @class = "form-control" })
        @Html.ValidationMessageFor(s => s.Notes)
    </div>

    <div class="form-group">
        <span class="timer"></span>
        <br />
        <br />

        <div name="sw_controls" class="sw_controls" id="sw_controls">
            <input type="button" value="Start" class="sw_start btn btn-sm btn-success" id="sw_start">
            <input type="button" value="Stop" class="sw_stop btn btn-sm btn-danger" id="sw_stop">
            <input type="button" value="Resume" class="sw_resume btn btn-sm btn-default" id="sw_resume">
        </div>
    </div>

    <div class="form-group">
        <label for="TaskStatusId">Completed</label>
        @Html.CheckBoxFor(s => s.IsCompleted)
        @Html.ValidationMessageFor(s => s.IsCompleted)
    </div>

    @Html.HiddenFor(t => t.SubTaskId)
    @Html.HiddenFor(t => t.TaskId)
    @Html.AntiForgeryToken()

    if (Model.TaskId == 0)
    {
        <a href="/Tasks/New" class="btn btn-default">Close</a>
    }
    else
    {
        <a href='@("/Tasks/Edit/" + Model.TaskId)' class="btn btn-default">Close</a>
    }
    <button type="submit" class="btn btn-primary">Save</button>
}

@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function () {

            var subtaskId = @Html.Raw(Json.Encode(Model.SubTaskId));

            var table = $("#taskSteps").DataTable({

                "paging": false,
                "ordering": false,
                "info": false,
                "searching": false,
                "order": [[0, "asc"]],

                ajax: {
                    url: "/api/taskprocedures/" + subtaskId,
                    dataSrc: ""
                },

                columns: [
                    {
                        data: "TaskProcedureId",
                        render: function (data, type, taskProc) {
                            return "<a class='btn btn-primary btn-xs' href='/taskprocedures/edit/" + data + "'> View </a>";
                        }
                    },
                    {
                        data: "TaskProcedureDescription"
                    },
                    {
                        data: "TaskSteps"
                    },
                    {
                        data: "TaskVideoFile"
                    }
                ]
            });

            $('.timer').countimer();

            $('#sw_controls').on('click', '.sw_start', function () {
                $('.timer').countimer('start');
            });

            $('#sw_controls').on('click', '.sw_stop', function () {
                $('.timer').countimer('stop');
            });

            $('#sw_controls').on('click', '.sw_resume', function () {
                $('.timer').countimer('resume');
            });
        });
    </script>
}
