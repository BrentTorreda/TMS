@model TaskManager.ViewModels.SubtaskLevel1ViewModel
@{
    ViewBag.Title = "SubtaskLevel1Form";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Sub Task Form</h2>
<h4>@Model.SubTaskName</h4>
<hr />

@if (Model.ViewOnly_bv == 1)
{
    <a class="btn btn-primary" href="/subtasklevel1/logwork/@Model.SubTaskId">Log Work</a>
    <br />
    <br />
}

<br />
@using (Html.BeginForm("Save", "SubtaskLevel1",
    FormMethod.Post, new { @class = "form-horizontal" }))
{
    @Html.ValidationSummary(true, "Please fix the following errors.")
    <div class="form-group">
        <label class="control-label col-sm-2" for="SubTaskOrder">Step Number</label>
        <div class="col-sm-10">
            @if (Model.ViewOnly_bv == 0)
            {
                @Html.TextBoxFor(s => s.SubTaskOrder, new { @class = "form-control" })
                @Html.ValidationMessageFor(s => s.SubTaskOrder)
            }
            else
            {
                <h5> @Model.SubTaskOrder </h5>
            }
        </div>
    </div>
    <div class="form-group">
        <label class="control-label col-sm-2" for="SubTaskName">Name</label>
        <div class="col-sm-10">
            @if (Model.ViewOnly_bv == 0)
            {
                @Html.TextBoxFor(s => s.SubTaskName, new { @class = "form-control" })
                @Html.ValidationMessageFor(s => s.SubTaskName)
            }
            else
            {
                <h5> @Model.SubTaskName</h5>
            }
        </div>
    </div>
    <div class="form-group">
        <label class="control-label col-sm-2" for="SubTaskDescription">Description</label>
        <div class="col-sm-10">
            @if (Model.ViewOnly_bv == 0)
            {
                @Html.TextAreaFor(s => s.SubTaskDescription, new { @class = "form-control" })
                @Html.ValidationMessageFor(s => s.SubTaskDescription)
            }
            else
            {
                <h5>@Model.SubTaskDescription</h5>
            }
        </div>
    </div>
    <div class="form-group">
        <label class="control-label col-sm-2" for="PriceId">Price</label>
        <div class="col-sm-10">
            @if (Model.ViewOnly_bv == 0)
            {
                @Html.DropDownListFor(s => s.PriceId, new SelectList(Model.Prices, "PriceId", "Amount"), "", new { @class = "form-control" })
                @Html.ValidationMessageFor(s => s.PriceId)
            }
            else
            {
                @Html.DropDownListFor(s => s.PriceId, new SelectList(Model.Prices, "PriceId", "Amount"), "", new { @disabled = "disabled" })
            }
        </div>
    </div>
    <div class="form-group">
        <label class="control-label col-sm-2" for="MemberId">Assigned to</label>
        <div class="col-sm-10">
            @if (Model.ViewOnly_bv == 0)
            {
                @Html.DropDownListFor(s => s.MemberId, new SelectList(Model.Members, "MemberId", "FullName"), "", new { @class = "form-control" })
                @Html.ValidationMessageFor(s => s.MemberId)
            }
            else
            {
                @Html.DropDownListFor(s => s.MemberId, new SelectList(Model.Members, "MemberId", "FullName"), "", new { @disabled = "disabled" })
            }
        </div>
    </div>
    <div class="form-group">
        <label class="control-label col-sm-2" for="DateCreated">Date Created</label>
        <div class="col-sm-10">
            @if (Model.ViewOnly_bv == 0)
            {
                <div class='input-group date' id='datetimepicker1'>
                <input type="text" id="DateCreated" name="DateCreated" class="form-control" />
                    <span class="input-group-addon">
                        <span class="glyphicon glyphicon-calendar"></span>
                    </span>
                </div>                        
                @Html.ValidationMessageFor(t => t.DateCreated)
            }
            else
            {
                <h5>@Model.DateCreated</h5>
            }
        </div>
    </div>
    <div class="form-group">
        <label class="control-label col-sm-2" for="Hours">Hours</label>
        <div class="col-sm-10">
            @if (Model.ViewOnly_bv == 0)
            {
                @Html.TextBoxFor(t => t.Hours, new { @type = "number", @class = "form-control" })
                @Html.ValidationMessageFor(t => t.Hours)
            }
            else
            {
                <h5>@Model.Hours</h5>
            }
        </div>
    </div>
    @Html.HiddenFor(t => t.SubTaskId)
    @Html.HiddenFor(t => t.TaskId)
    @Html.AntiForgeryToken()

    <div class="form-group" style="display:block;"> 
        <div class="col-sm-12">
            <div class="btn-group pull-right">
                @if (Model.TaskId == 0)
                {
                    <a href="/Tasks/New" class="btn btn-default">Close</a>
                }
                else
                {
                    <a href="/Tasks/Edit/@Model.TaskId"  class="btn btn-default">Close</a>
                }
                @if (Model.ViewOnly_bv == 0)
                {
                    <button type="submit" class="btn btn-primary">Save</button>
                }
            </div>
        </div>
    </div>
}

<br />

<hr />  
<h5>Task Steps</h5>

<a href="/TaskProcedures/New?taskId=@Model.TaskId&subTaskId=@Model.SubTaskId" class="btn btn-primary">New Step</a>

<table id="taskSteps" class="table table-bordered table-hover">
    <thead>
        <tr>
            <th> </th>
            <th>Order</th>
            <th>Name</th>
            <th>Steps</th>
            <th>Video</th>
            <th> </th>
        </tr>
    </thead>
    <tbody></tbody>
</table>
<br />
<hr />


@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function () {

            var subtaskId = @Html.Raw(Json.Encode(Model.SubTaskId));

            var viewOnly_bv = @Html.Raw(Json.Encode(Model.ViewOnly_bv));
            
            $('#datetimepicker1').datetimepicker();

            var table = $("#taskSteps").DataTable({

                "paging": false,
                "ordering": true,
                "info": false,
                "searching": false,
                "order": [[0, "asc"]],

                ajax: {
                    url: "/api/taskprocedures/" + subtaskId,
                    dataSrc: ""
                },

                columns: [
                    {
                        data: "TaskProcedureId",
                        render: function (data, type, taskProc) {
                            var viewMarkup = "";
                            if (viewOnly_bv == 0) {
                                viewMarkup = "<a class='btn btn-primary btn-xs' href='/taskprocedures/edit?id=" + data + "&caller=subtask> View </a>";
                            }
                            else {
                                viewMarkup = "<a class='btn btn-primary btn-xs' href='/taskprocedures/view/" + data + "'> View </a>";
                            }
                            return viewMarkup;
                        }
                    },
                    {
                        data: "TaskProcedureOrder"
                    },
                    {
                        data: "TaskProcedureDescription"
                    },
                    {
                        data: "TaskSteps"
                    },
                    {
                        data: "TaskVideoFile"
                    },
                    {
                        data: "TaskProcedureId",
                        render: function (data) {
                            var delMarkup = "";
                            if (viewOnly_bv == 0) {
                                delMarkup = "<button class='js-delete btn btn-primary btn-xs' data- taskprocedure - id=" + data + " > Delete</button >";
                            }
                            return delMarkup;
                        }
                    }
                ]
            });

            $("#taskSteps").on("click", ".js-delete", function () {
                var button = $(this);

                bootbox.confirm("Are you sure you want to delete this step?", function (result) {
                    if (result) {
                        $.ajax({
                            url: "/api/taskprocedures/" + button.attr("data-taskprocedure-id"),
                            method: "DELETE",
                            success: function () {
                                table.row(button.parents("tr")).remove().draw();
                            }
                        });
                    }
                });
            });

            function goBack() {
                window.history.back();
            }
        });
    </script>
}
