@model TaskManager.ViewModels.TasksFormViewModel

@{
    ViewBag.Title = "TaskForm";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Add A Task</h2>
<h4>From Template: @Model.TaskName</h4>

<hr />

<ul class="nav nav-tabs">
    <li class="active"><a data-toggle="tab" href="#home">Details</a></li>
    <li><a data-toggle="tab" href="#menu1">Sub Tasks</a></li>
</ul>

@using (Html.BeginForm("Save", "Tasks",
            FormMethod.Post, new { @class = "form-horizontal", @id = "Tasks" }))
{
    @Html.ValidationSummary(true, "Please fix the following errors.")
    <div class="tab-content">
        <div id="home" class="tab-pane fade in active">
            <br />

            <div class="row">
                <div class="form-group col-sm-6">
                    <label class="control-label col-sm-3" for="TaskName">Name</label>
                    <div class="col-sm-8">
                        @Html.TextBoxFor(t => t.TaskName, new { @class = "form-control", @Value = Model.TaskName + " - 001" })
                        @Html.ValidationMessageFor(t => t.TaskName)
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="form-group col-sm-6">
                    <label class="control-label col-sm-3" for="TaskDescription">Description</label>
                    <div class="col-sm-8">
                        @Html.TextAreaFor(t => t.TaskDescription, new { @class = "form-control" })
                        @Html.ValidationMessageFor(t => t.TaskDescription)
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="form-group col-sm-6">
                    <label class="control-label col-sm-3" for="TaskTypeId">Type</label>
                    <div class="col-sm-8">
                        @Html.DropDownListFor(t => t.TaskTypeId, new SelectList(Model.TaskTypes, "TaskTypeId", "TaskName"), "", new { @class = "form-control" })
                        @Html.ValidationMessageFor(t => t.TaskTypeId)
                    </div>
                </div>
                <div class="form-group col-sm-6">
                    <label class="control-label col-sm-3" for="TaskCategoryId">Category</label>
                    <div class="col-sm-8">
                        @Html.DropDownListFor(t => t.TaskCategoryId, new SelectList(Model.TaskCategories, "TaskCategoryId", "CategoryName"), "", new { @class = "form-control" })
                        @Html.ValidationMessageFor(t => t.TaskCategoryId)
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="form-group col-sm-6">
                    <label class="control-label col-sm-3" for="DateCreated">Date Created</label>
                    <div class="col-sm-8">
                        <div class='input-group date' id='datetimepicker1'>
                            @Html.TextBoxFor(t => t.DateCreated, "{0:dd/MM/yyyy}", new { @class = "form-control", @Value = DateTime.Now })
                            <span class="input-group-addon">
                                <span class="glyphicon glyphicon-calendar"></span>
                            </span>
                            @Html.ValidationMessageFor(t => t.DateCreated)
                        </div>
                    </div>
                </div>
                <div class="form-group col-sm-6">
                    <label class="control-label col-sm-3" for="Hours">Hours Required</label>
                    <div class="col-sm-8">
                        @Html.TextBoxFor(t => t.Hours, new { @class = "form-control" })
                        @Html.ValidationMessageFor(t => t.Hours)
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="form-group col-sm-6">
                    <label class="control-label col-sm-3" for="CompanyId">Company</label>
                    <div class="col-sm-8">
                        @Html.DropDownListFor(t => t.CompanyId, new SelectList(Model.Companies, "CompanyId", "CompanyName"), "", new { @class = "form-control" })
                        @Html.ValidationMessageFor(t => t.CompanyId)
                    </div>
                </div>
                <div class="form-group col-sm-6">
                    <label class="control-label col-sm-3" for="PriceId">Price</label>
                    <div class="col-sm-8">
                        @Html.DropDownListFor(t => t.PriceId, new SelectList(Model.Prices, "PriceId", "Amount"), "", new { @class = "form-control" })
                        @Html.ValidationMessageFor(t => t.PriceId)
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="form-group col-sm-6">
                    <label class="control-label col-sm-3" for="PriceId">Assigned To</label>
                    <div class="col-sm-8">
                        @Html.DropDownListFor(t => t.MemberId, new SelectList(Model.Members, "MemberId", "FullName"), "", new { @class = "form-control" })
                        @Html.ValidationMessageFor(t => t.MemberId)
                    </div>
                </div>
                <div class="form-group col-sm-6">
                    <label class="control-label col-sm-3" for="TaskStatusId">Status</label>
                    <div class="col-sm-8">
                        @Html.DropDownListFor(t => t.TaskStatusId, new SelectList(Model.TaskStatuses, "TaskStatusId", "TaskStatusName"), "", new { @class = "form-control" })
                        @Html.ValidationMessageFor(t => t.TaskStatusId)
                    </div>
                </div>
            </div>
            @Html.HiddenFor(t => t.TaskId)
            @Html.AntiForgeryToken()


        </div>

        <div id="menu1" class="tab-pane fade">
            <br />
            <p>@Html.ActionLink("New Subtask", "New", "SubtaskLevel1", new { id = Model.TaskId }, new { @class = "btn btn-primary" })</p>

            <table id="subTasks" class="table table-bordered table-hover" style="width:100%">
                <thead>
                    <tr>
                        <th> </th>
                        <th>Order</th>
                        <th>Name</th>
                        <th>Description</th>
                        <th>Hours</th>
                        <th>Date Created</th>
                        <th>Assigned To</th>
                        <th> </th>
                    </tr>
                </thead>
                <tbody></tbody>
            </table>
        </div>
    </div>

    <div class="panel panel-default">
        <div class="panel-heading">
            <h4 class="panel-title">
                <a class="btn btn-info" data-toggle="collapse" href="#currentTasks">Occurence Options</a>
            </h4>
        </div>
        <div id="currentTasks" class="panel-collapse collapse">
            <div class="panel-body">
                <form action="/" method="post" class="form-horizontal">
                    <div class="col-sm-8">
                        <div class="form-group">
                            <label class="control-label col-sm-3" for="Hours">Renewal Pattern</label>
                            <div class="col-sm-8">
                                <select class="form-control" id="RenewalPattern" name="RenewalPattern">
                                    <option value="0" selected="selected">Weekly</option>
                                    <option value="1">Every Weekday</option>
                                    <option value="2">Every MondayWednesdayFriday</option>
                                    <option value="3">Every TuesdayThursday</option>
                                    <option value="4">Every Daily</option>
                                    <option value="5">Every Monthly</option>
                                    <option value="6">Every Yearly</option>
                                </select>
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-sm-3" for="Hours">Repeat Every</label>
                            <div class="col-sm-8">
                                <input type="number" id="RepeatEvery" class="form-control" value="1">
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-sm-3" for="Hours">Start Date</label>
                            <div class="col-sm-8">
                                <div class='input-group date' id='datetimepicker2'>
                                    <input type="text" class="form-control" />
                                    <span class="input-group-addon">
                                        <span class="glyphicon glyphicon-calendar"></span>
                                    </span>
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-sm-3" for="Hours">End On Date</label>
                            <div class="col-sm-8">
                                <div class='input-group date' id='datetimepicker3'>
                                    <input type="text" class="form-control" />
                                    <span class="input-group-addon">
                                        <span class="glyphicon glyphicon-calendar"></span>
                                    </span>
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-sm-3" for="Hours">Number Of Dates</label>
                            <div class="col-sm-8">
                                <input type="number" id="NumberOfDates" class="form-control" value="1">
                            </div>
                        </div>
                    </div>

                    <div class="col-sm-4">
                        <ul style="list-style-type:none">
                            <li><div style="display:flex"><div style="width:30%;float:left">Sunday</div><div style="width:30%"><input id="daylistSunday" type="checkbox" /></div></div></li>
                            <li><div style="display:flex"><div style="width:30%;float:left">Monday</div><div style="width:30%"><input id="daylistMonday" type="checkbox" /></div></div></li>
                            <li><div style="display:flex"><div style="width:30%;float:left">Tuesday</div><div style="width:30%"><input id="daylistTuesday" type="checkbox" /></div></div></li>
                            <li><div style="display:flex"><div style="width:30%;float:left">Wednesday</div><div style="width:30%"> <input id="daylistWednesday" type="checkbox" /></div></div></li>
                            <li><div style="display:flex"><div style="width:30%;float:left">Thursday</div><div style="width:30%"> <input id="daylistThursday" type="checkbox" /></div></div></li>
                            <li><div style="display:flex"><div style="width:30%;float:left">Friday</div><div style="width:30%"> <input id="daylistFriday" type="checkbox" /></div></div></li>
                            <li><div style="display:flex"><div style="width:30%;float:left">Saturday</div><div style="width:30%"> <input id="daylistSaturday" type="checkbox" /></div></div></li>
                        </ul>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <div class="form-group" style="display:block;">
        <div class="row col-sm-12">
            <div class="btn-group pull-right">
                <a name="cancelTrans" id="cancelTrans" class="btn btn-default">Cancel</a>
                <button id="commit" name="commit" type="submit" class="btn btn-primary">Save</button>
            </div>
        </div>
    </div>
}


@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function () {

            var taskId = @Html.Raw(Json.Encode(Model.TaskId));

            $(document).ready(function () {
                $('#datetimepicker1').datetimepicker();
            });

            $(document).ready(function () {
                $('#datetimepicker2').datetimepicker();
            });

            $(document).ready(function () {
                $('#datetimepicker3').datetimepicker();
            });

            formmodified = 1;

            window.onbeforeunload = confirmExit;

            function confirmExit() {
                if (formmodified == 1) {
                    return "New information not saved. Do you wish to leave the page?";
                }
            }
            $("#taskFormButtons").on("click", "#commit", function () {
                formmodified = 0;
            });


            var table = $("#subTasks").DataTable({
                "paging": false,
                "ordering": true,
                "info": false,
                "searching": false,
                "order": [[0, "asc"]],

                ajax: {
                    url: "/api/subtasklevel1/" + taskId,
                    dataSrc: ""
                },

                columns: [
                    {
                        data: "SubTaskId",
                        render: function (data, type, subtask) {
                            return "<a class='btn btn-primary btn-xs' href='/subtasklevel1/edit/" + subtask.SubTaskId + "'> View </a>";
                        }
                    },
                    {
                        data: "SubTaskOrder"
                    },
                    {
                        data: "SubTaskName",
                    },
                    {
                        data: "SubTaskDescription"
                    },
                    {
                        data: "Hours"
                    },
                    {
                        data: "DateCreated",
                        render: function (data) {
                            return moment(data).format("DD MMM YY");
                        }
                    },
                    {
                        data: "Members.LastName",
                        render: function (data, type, member) {
                            return member.Members.FirstName + " " + member.Members.LastName;
                        }
                    },
                    {
                        data: "SubTaskId",
                        render: function (data) {
                            return "<button class='js-delete btn btn-primary btn-xs' data-subtasklevel1-id=" + data + ">Delete</button>";
                        }
                    }
                ]
            });

            $("#subTasks").on("click", ".js-delete", function () {
                var button = $(this);

                bootbox.confirm("Are you sure you want to delete this subtask?", function (result) {
                    if (result) {
                        $.ajax({
                            url: "/api/subtasklevel1/" + button.attr("data-subtasklevel1-id"),
                            method: "DELETE",
                            success: function () {
                                table.row(button.parents("tr")).remove().draw();
                            }
                        });
                    }
                });
            });

            $("#taskFormButtons").on("click", "#cancelTrans", function (e) {
                e.preventDefault();
                bootbox.confirm("Are you sure you want to cancel?", function (result) {
                    if (result) {
                        $.ajax({
                            url: "/api/tasks/" + taskId,
                            method: "DELETE",
                            success: function () {
                                window.open("/Tasks/Index/0", "_self");
                            }
                        });
                    }
                })

            });

            $('#datetimepicker1').datetimepicker();

            $('#cancelTrans').click(function () {
                goBack();
            });

            function goBack() {
                window.history.back();
            }
        });
    </script>
}

