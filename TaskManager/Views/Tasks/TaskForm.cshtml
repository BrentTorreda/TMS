@model TaskManager.ViewModels.TasksFormViewModel

@{
    ViewBag.Title = "TaskForm";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h4>Sub Tasks</h4>
<hr />
<p>
    @Html.ActionLink("New Subtask", "New", "SubtaskLevel1", new { id = Model.TaskId }, new { @class = "btn btn-primary" })
</p>

<table id="subTasks" class="table table-bordered table-hover">
    <thead>
        <tr>
            <th> </th>
            <th>Order</th>
            <th>Name</th>
            <th>Description</th>
            <th>Hours</th>
            <th>Date Created</th>
            <th>Assigned To</th>
            <th> </th>
        </tr>
    </thead>
    <tbody></tbody>
</table>
<br/>
<hr/>

<h3>Task Details</h3>
@using (Html.BeginForm("Save", "Tasks",
            FormMethod.Post, new { @class = "form-style-2" }))
{
    @Html.ValidationSummary(true, "Please fix the following errors.")     
    <label for="TaskName">
        <span>
            Name
            <span class="required">*</span>
        </span>
        @Html.TextBoxFor(t => t.TaskName, new { @class = "form-control" })
        @Html.ValidationMessageFor(t => t.TaskName)
    </label>
    <label for="TaskDescription">
        <span>
            Description
            <span class="required">*</span>
        </span>
        @Html.TextAreaFor(t => t.TaskDescription, new { @class = "form-control" })
        @Html.ValidationMessageFor(t => t.TaskDescription)
    </label>
    <label for="TaskTypeId">
        <span>Type</span>
        @Html.DropDownListFor(t => t.TaskTypeId, new SelectList(Model.TaskTypes, "TaskTypeId", "TaskName"), "", new { @class = "form-control" })
        @Html.ValidationMessageFor(t => t.TaskTypeId)
    </label>
    <label for="TaskCategoryId">
        <span>Category</span>
        @Html.DropDownListFor(t => t.TaskCategoryId, new SelectList(Model.TaskCategories, "TaskCategoryId", "CategoryName"), "", new { @class = "form-control" })
        @Html.ValidationMessageFor(t => t.TaskCategoryId)
    </label>
    <label for="DateCreated">
        <span>Date Created</span>
        @Html.TextBoxFor(t => t.DateCreated, "{0:dd/MM/yyyy}", new { @class = "form-control" })
        @Html.ValidationMessageFor(t => t.DateCreated)
    </label>
    <label for="Hours">
        <span>Hours Required</span>
        @Html.TextBoxFor(t => t.Hours, new { @class = "form-control" })
        @Html.ValidationMessageFor(t => t.Hours)
    </label>
    <label for="CompanyId">
        <span>Company</span>
        @Html.DropDownListFor(t => t.CompanyId, new SelectList(Model.Companies, "CompanyId", "CompanyName"), "", new { @class = "form-control" })
        @Html.ValidationMessageFor(t => t.CompanyId)
    </label>
    <label for="PriceId">
        <span>Price</span>
        @Html.DropDownListFor(t => t.PriceId, new SelectList(Model.Prices, "PriceId", "Amount"), "", new { @class = "form-control" })
        @Html.ValidationMessageFor(t => t.PriceId)
    </label>
    <label for="PriceId">
        <span>Assigned To</span>
        @Html.DropDownListFor(t => t.MemberId, new SelectList(Model.Members, "MemberId", "LastName"), "", new { @class = "form-control" })
        @Html.ValidationMessageFor(t => t.MemberId)
    </label>
    <label for="TaskStatusId">
        <span>Status</span>
        @Html.DropDownListFor(t => t.TaskStatusId, new SelectList(Model.TaskStatuses, "TaskStatusId", "TaskStatusName"), "", new { @class = "form-control" })
        @Html.ValidationMessageFor(t => t.TaskStatusId)
    </label>
    @Html.HiddenFor(t => t.TaskId)
    @Html.AntiForgeryToken()
    <button type="submit" class="btn btn-primary">Save</button>
}

@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $(document).ready(function () {

            var taskId = @Html.Raw(Json.Encode(Model.TaskId));

            var table = $("#subTasks").DataTable({
                "paging": false,
                "ordering": true,
                "info": false,
                "searching": false,
                "order": [[0, "asc"]],

                ajax: {
                    url: "/api/subtasklevel1/" + taskId,
                    dataSrc: ""
                },

                columns: [   
                    {
                        data: "SubTaskId",
                        render: function (data, type, subtask) {
                            return "<a class='btn btn-primary btn-xs' href='/subtasklevel1/edit/" + subtask.SubTaskId + "'> View </a>";
                        }
                    },
                    {
                        data: "Order"                        
                    },
                    {
                        data: "SubTaskName",                        
                    },
                    {
                        data: "SubTaskDescription"
                    },
                    {
                        data: "Hours"
                    },
                    {
                        data: "DateCreated",
                        render: function (data) {
                            return moment(data).format("DD MMM YY");
                        }
                    },   
                    {
                        data: "Members.LastName",
                        render: function (data, type, member) {
                            return member.Members.FirstName + " " + member.Members.LastName;
                        }
                    },
                    {
                        data: "SubTaskId",
                        render: function (data) {
                            return "<button class='js-delete btn btn-primary btn-xs' data-subtasklevel1-id=" + data + ">Delete</button>";
                        }
                    }
                ]
            });

            $("#subTasks").on("click", ".js-delete", function () {
                var button = $(this);

                bootbox.confirm("Are you sure you want to delete this subtask?", function (result) {
                    if (result) {
                        $.ajax({
                            url: "/api/subtasklevel1/" + button.attr("data-subtasklevel1-id"),
                            method: "DELETE",
                            success: function () {
                                table.row(button.parents("tr")).remove().draw();
                            }
                        });
                    }
                });
            });
        });
    </script>
}

