@model TaskManager.ViewModels.TasksFormViewModel

@{
    ViewBag.Title = "TaskForm";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Task Form</h2>

@using (Html.BeginForm("Save", "Tasks"))
{
    @Html.ValidationSummary(true, "Please fix the following errors.")
    <div class="form-group">
        @Html.LabelFor(t => t.TaskName)
        @Html.TextBoxFor(t => t.TaskName, new { @class = "form-control" })
        @Html.ValidationMessageFor(t => t.TaskName)
    </div>
    <div class="form-group">
        @Html.LabelFor(t => t.TaskDescription)
        @Html.TextAreaFor(t => t.TaskDescription, new { @class = "form-control" })
        @Html.ValidationMessageFor(t => t.TaskDescription)
    </div>
    <div class="form-group">
        @Html.LabelFor(t => t.TaskTypeId)
        @Html.DropDownListFor(t => t.TaskTypeId, new SelectList(Model.TaskTypes, "TaskTypeId", "TaskName"), "", new { @class = "form-control" })
        @Html.ValidationMessageFor(t => t.TaskTypeId)
    </div>
    <div class="form-group">
        @Html.LabelFor(t => t.TaskCategoryId)
        @Html.DropDownListFor(t => t.TaskCategoryId, new SelectList(Model.TaskCategories, "TaskCategoryId", "CategoryName"), "", new { @class = "form-control" })
        @Html.ValidationMessageFor(t => t.TaskCategoryId)
    </div>
    <div class="form-group">
        @Html.LabelFor(t => t.DateCreated)
        @Html.TextBoxFor(t => t.DateCreated, "{0:dd/MM/yyyy}", new { @class = "form-control" })
        @Html.ValidationMessageFor(t => t.DateCreated)
    </div>
    <div class="form-group">
        @Html.LabelFor(t => t.Hours)
        @Html.TextBoxFor(t => t.Hours, new { @class = "form-control" })
        @Html.ValidationMessageFor(t => t.Hours)
    </div>
    <div class="form-group">
        @Html.LabelFor(t => t.CompanyId)
        @Html.DropDownListFor(t => t.CompanyId, new SelectList(Model.Companies, "CompanyId", "CompanyName"), "", new { @class = "form-control" })
        @Html.ValidationMessageFor(t => t.CompanyId)
    </div>
    <div class="form-group">
        @Html.LabelFor(t => t.PriceId)
        @Html.DropDownListFor(t => t.PriceId, new SelectList(Model.Prices, "PriceId", "Amount"), "", new { @class = "form-control" })
        @Html.ValidationMessageFor(t => t.PriceId)
    </div>
    <div class="form-group">
        @Html.LabelFor(t => t.TaskStatusId)
        @Html.DropDownListFor(t => t.TaskStatusId, new SelectList(Model.TaskStatuses, "TaskStatusId", "TaskStatusName"), "", new { @class = "form-control" })
        @Html.ValidationMessageFor(t => t.TaskStatusId)
    </div>
    @Html.HiddenFor(t => t.TaskId)
    @Html.AntiForgeryToken()

    <br />
    <hr />
    <h3>Task Procedure</h3>
    <p>
        @Html.ActionLink("New Step", "New", "TaskProcedures", null, new { @class = "btn btn-primary" })
    </p>

    <table id="taskSteps" class="table table-bordered table-hover">
        <thead>
            <tr>
                <th>Number</th>
                <th>Description</th>
                <th>Video File</th>
                <th> </th>
            </tr>
        </thead>
        <tbody></tbody>
    </table>

    <button type="submit" class="btn btn-primary">Save</button>
}

@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $(document).ready(function () {
            var table = $("#taskSteps").DataTable({

                "order": [[0, "asc"]],

                ajax: {
                    url: "/api/taskprocedures",
                    dataSrc: ""
                },

                columns: [
                    {
                        data: "TaskProcedureId",
                        render: function (data, type, taskProc) {
                            return "<a href='/taskprocedures/edit/" + taskProc.TaskProcedureId + "'>" + taskProc.TaskProcedureOrder + "</a>";
                        }
                    },
                    {
                        data: "TaskSteps"
                    },
                    {
                        data: "TaskVideoFile"
                    },
                    {
                        data: "TaskProcedureId",
                        render: function (data) {
                            return "<button class='js-delete btn btn-primary' data-taskprocedure-id=" + data + ">Delete</button>";
                        }
                    }
                ]
            });
        });
    </script>
}

