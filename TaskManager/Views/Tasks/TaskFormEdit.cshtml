@model TaskManager.ViewModels.TasksFormViewModel

@{
    ViewBag.Title = "TaskForm";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Task Form</h2>
<hr />
<h4>Sub Tasks</h4>
<p>
    @Html.ActionLink("New Subtask", "New", "SubtaskLevel1", new { id = Model.TaskId }, new { @class = "btn btn-primary" })
</p>

<table id="subTasks" class="table table-bordered table-hover">
    <thead>
        <tr>
            <th> </th>
            <th>Order</th>
            <th>Name</th>
            <th>Description</th>
            <th>Hours</th>
            <th>Date Created</th>
            <th>Assigned To</th>
            <th> </th>
        </tr>
    </thead>
    <tbody></tbody>
</table>
<br />
<hr />

<h4>Task Details</h4>
@using (Html.BeginForm("Save", "Tasks",
            FormMethod.Post, new { @class = "form-horizontal" }))
{
    @Html.ValidationSummary(true, "Please fix the following errors.")
    <div class="form-group">
        <label class="control-label col-sm-2" for="TaskName">Name</label>
        <div class="col-sm-10">
            @Html.TextBoxFor(t => t.TaskName, new { @class = "form-control" })
            @Html.ValidationMessageFor(t => t.TaskName)
        </div>
    </div>
    <div class="form-group">
        <label class="control-label col-sm-2" for="TaskDescription">Description</label>
        <div class="col-sm-10">
            @Html.TextAreaFor(t => t.TaskDescription, new { @class = "form-control" })
            @Html.ValidationMessageFor(t => t.TaskDescription)
        </div>
    </div>
    <div class="form-group">
        <label class="control-label col-sm-2" for="TaskTypeId">Type</label>
        <div class="col-sm-10">
            @Html.DropDownListFor(t => t.TaskTypeId, new SelectList(Model.TaskTypes, "TaskTypeId", "TaskName"), "", new { @class = "form-control" })
            @Html.ValidationMessageFor(t => t.TaskTypeId)
        </div>
    </div>
    <div class="form-group">
        <label class="control-label col-sm-2" for="TaskCategoryId">Category</label>
        <div class="col-sm-10">
            @Html.DropDownListFor(t => t.TaskCategoryId, new SelectList(Model.TaskCategories, "TaskCategoryId", "CategoryName"), "", new { @class = "form-control" })
            @Html.ValidationMessageFor(t => t.TaskCategoryId)
        </div>
    </div>
    <div class="form-group">
        <label class="control-label col-sm-2" for="DateCreated">Date Created</label>
        <div class="col-sm-10">
            @Html.TextBoxFor(t => t.DateCreated, "{0:dd/MM/yyyy}", new { @class = "form-control" })
            @Html.ValidationMessageFor(t => t.DateCreated)
        </div>
    </div>
    <div class="form-group">
        <label class="control-label col-sm-2" for="Hours">Hours Required</label>
        <div class="col-sm-10">
            @Html.TextBoxFor(t => t.Hours, new { @class = "form-control" })
            @Html.ValidationMessageFor(t => t.Hours)
        </div>
    </div>
    <div class="form-group">
        <label class="control-label col-sm-2" for="CompanyId">Company</label>
        <div class="col-sm-10">
            @Html.DropDownListFor(t => t.CompanyId, new SelectList(Model.Companies, "CompanyId", "CompanyName"), "", new { @class = "form-control" })
            @Html.ValidationMessageFor(t => t.CompanyId)
        </div>
    </div>
    <div class="form-group">
        <label class="control-label col-sm-2" for="PriceId">Price</label>
        <div class="col-sm-10">
            @Html.DropDownListFor(t => t.PriceId, new SelectList(Model.Prices, "PriceId", "Amount"), "", new { @class = "form-control" })
            @Html.ValidationMessageFor(t => t.PriceId)
        </div>
    </div>
    <div class="form-group">
        <label class="control-label col-sm-2" for="PriceId">Assigned To</label>
        <div class="col-sm-10">
            @Html.DropDownListFor(t => t.MemberId, new SelectList(Model.Members, "MemberId", "FullName"), "", new { @class = "form-control" })
            @Html.ValidationMessageFor(t => t.MemberId)
        </div>
    </div>
    <div class="form-group">
        <label class="control-label col-sm-2" for="TaskStatusId">Status</label>
        <div class="col-sm-10">
            @Html.DropDownListFor(t => t.TaskStatusId, new SelectList(Model.TaskStatuses, "TaskStatusId", "TaskStatusName"), "", new { @class = "form-control" })
            @Html.ValidationMessageFor(t => t.TaskStatusId)
        </div>
    </div>
    @Html.HiddenFor(t => t.TaskId)
    @Html.AntiForgeryToken()
    <a href="/Tasks/Index/0" class="btn btn-default">Close</a>
    <button type="submit" class="btn btn-primary">Save</button>
}

@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function () {

            var taskId = @Html.Raw(Json.Encode(Model.TaskId));

            var table = $("#subTasks").DataTable({
                "paging": false,
                "ordering": true,
                "info": false,
                "searching": false,
                "order": [[0, "asc"]],

                ajax: {
                    url: "/api/subtasklevel1/" + taskId,
                    dataSrc: ""
                },

                columns: [
                    {
                        data: "SubTaskId",
                        render: function (data, type, subtask) {
                            return "<a class='btn btn-primary btn-xs' href='/subtasklevel1/edit/" + subtask.SubTaskId + "'> View </a>";
                        }
                    },
                    {
                        data: "Order"
                    },
                    {
                        data: "SubTaskName",
                    },
                    {
                        data: "SubTaskDescription"
                    },
                    {
                        data: "Hours"
                    },
                    {
                        data: "DateCreated",
                        render: function (data) {
                            return moment(data).format("DD MMM YY");
                        }
                    },
                    {
                        data: "Members.LastName",
                        render: function (data, type, member) {
                            return member.Members.FirstName + " " + member.Members.LastName;
                        }
                    },
                    {
                        data: "SubTaskId",
                        render: function (data) {
                            return "<button class='js-delete btn btn-primary btn-xs' data-subtasklevel1-id=" + data + ">Delete</button>";
                        }
                    }
                ]
            });

            $("#subTasks").on("click", ".js-delete", function () {
                var button = $(this);

                bootbox.confirm("Are you sure you want to delete this subtask?", function (result) {
                    if (result) {
                        $.ajax({
                            url: "/api/subtasklevel1/" + button.attr("data-subtasklevel1-id"),
                            method: "DELETE",
                            success: function () {
                                table.row(button.parents("tr")).remove().draw();
                            }
                        });
                    }
                });
            });
        });
    </script>
}

