@model TaskManager.ViewModels.TasksFormViewModel

@{
    ViewBag.Title = "TaskForm";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Task Form</h2>
<hr />

@using (Html.BeginForm("Save", "Tasks",
        FormMethod.Post, new { @class = "form-horizontal", @id = "Tasks" }))
{
    @Html.ValidationSummary(true, "Please fix the following errors.")
    <div class="row">
        <div class="form-group col-sm-6">
            <label class="control-label col-sm-3" for="TaskName">Name</label>
            <div class="col-sm-8">
                @Html.TextBoxFor(t => t.TaskName, new { @class = "form-control" })
                @Html.ValidationMessageFor(t => t.TaskName)
            </div>
        </div>
    </div>
    <div class="row">
        <div class="form-group col-sm-6">
            <label class="control-label col-sm-3" for="TaskDescription">Description</label>
            <div class="col-sm-8">
                @Html.TextAreaFor(t => t.TaskDescription, new { @class = "form-control" })
                @Html.ValidationMessageFor(t => t.TaskDescription)
            </div>
        </div>
    </div>
    <div class="row">
        <div class="form-group col-sm-6">
            <label class="control-label col-sm-3" for="TaskTypeId">Type</label>
            <div class="col-sm-8">
                @Html.DropDownListFor(t => t.TaskTypeId, new SelectList(Model.TaskTypes, "TaskTypeId", "TaskName"), "", new { @class = "form-control" })
                @Html.ValidationMessageFor(t => t.TaskTypeId)
            </div>
        </div>
        <div class="form-group col-sm-6">
            <label class="control-label col-sm-3" for="TaskCategoryId">Category</label>
            <div class="col-sm-8">
                @Html.DropDownListFor(t => t.TaskCategoryId, new SelectList(Model.TaskCategories, "TaskCategoryId", "CategoryName"), "", new { @class = "form-control" })
                @Html.ValidationMessageFor(t => t.TaskCategoryId)
            </div>
        </div>
    </div>
    <div class="row">
        <div class="form-group col-sm-6">
            <label class="control-label col-sm-3" for="DateCreated">Date Created</label>
            <div class="col-sm-8">
                <div class='input-group date' id='datetimepicker1'>
                    @Html.TextBoxFor(t => t.DateCreated, "{0:dd/MM/yyyy}", new { @class = "form-control" })
                    <span class="input-group-addon">
                        <span class="glyphicon glyphicon-calendar"></span>
                    </span>
                    @Html.ValidationMessageFor(t => t.DateCreated)
                </div>
            </div>
        </div>
        <div class="form-group col-sm-6">
            <label class="control-label col-sm-3" for="Hours">Hours Required</label>
            <div class="col-sm-8">
                @Html.TextBoxFor(t => t.Hours, new { @class = "form-control", @type = "number" })
                @Html.ValidationMessageFor(t => t.Hours)
            </div>
        </div>
    </div>
    <div class="row">
        <div class="form-group col-sm-6">
            <label class="control-label col-sm-3" for="CompanyId">Company</label>
            <div class="col-sm-8">
                @Html.DropDownListFor(t => t.CompanyId, new SelectList(Model.Companies, "CompanyId", "CompanyName"), "", new { @class = "form-control" })
                @Html.ValidationMessageFor(t => t.CompanyId)
            </div>
        </div>
        <div class="form-group col-sm-6">
            <label class="control-label col-sm-3" for="PriceId">Price</label>
            <div class="col-sm-8">
                @Html.DropDownListFor(t => t.PriceId, new SelectList(Model.Prices, "PriceId", "Amount"), "", new { @class = "form-control" })
                @Html.ValidationMessageFor(t => t.PriceId)
            </div>
        </div>
    </div>
    <div class="row">
        <div class="form-group col-sm-6">
            <label class="control-label col-sm-3" for="PriceId">Assigned To</label>
            <div class="col-sm-8">
                @Html.DropDownListFor(t => t.MemberId, new SelectList(Model.Members, "MemberId", "FullName"), "", new { @class = "form-control" })
                @Html.ValidationMessageFor(t => t.MemberId)
            </div>
        </div>
        <div class="form-group col-sm-6">
            <label class="control-label col-sm-3" for="TaskStatusId">Status</label>
            <div class="col-sm-8">
                @Html.DropDownListFor(t => t.TaskStatusId, new SelectList(Model.TaskStatuses, "TaskStatusId", "TaskStatusName"), "", new { @class = "form-control" })
                @Html.ValidationMessageFor(t => t.TaskStatusId)
            </div>
        </div>
    </div>
    @Html.HiddenFor(t => t.TaskId)
    @Html.AntiForgeryToken()

    if (Model.IsTemplate)
    {
        <div id="occurrences" class="panel panel-default">
            <div class="panel-heading">
                <h4 class="panel-title">
                    <a class="btn btn-default" data-toggle="collapse" href="#setOccurrences">Occurence Options</a>
                </h4>
            </div>
            <div id="setOccurrences" class="panel-collapse collapse">
                <div class="panel-body">
                    <div class="container col-sm-12">
                        <div class="row">
                            @*Row 1*@
                            <div class="col-sm-6">
                                <div class="row">
                                    <div class="well well-sm">
                                        <div class="form-group">
                                            <label class="control-label col-sm-3" for="Hours">Renewal Pattern</label>
                                            <div class="col-sm-3">
                                                <select class="form-control" id="RenewalPattern" name="RenewalPattern">
                                                    <option value="0" selected="selected">Weekly</option>
                                                    <option value="1">Daily</option>
                                                    <option value="2">Monthly</option>
                                                    <option value="3">Bi-Monthly</option>
                                                    <option value="4">Yearly</option>
                                                </select>
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            <label class="control-label col-sm-3" for="Hours">Recur Every</label>
                                            <div class="col-sm-3">
                                                <input type="number" id="RepeatEvery" name="RepeatEvery" class="form-control" value="1" min="1">
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                @*Row 2*@
                                <div class="row">
                                    <div class="well well-sm">
                                        <div class="form-group">
                                            <label class="control-label col-sm-3" for="Hours">Start Date</label>
                                            <div class="col-sm-3">
                                                <div class='input-group date' id='datetimepicker2'>
                                                    <input id="StartDate" name="StartDate" type="text" class="form-control" />
                                                    <span class="input-group-addon">
                                                        <span class="glyphicon glyphicon-calendar"></span>
                                                    </span>
                                                </div>
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            <label class="control-label col-sm-3" for="Hours">End On Date</label>
                                            <div class="col-sm-3">
                                                <div class='input-group date' id='datetimepicker3'>
                                                    <input id="EndDate" name="EndDate" type="text" class="form-control" />
                                                    <span class="input-group-addon">
                                                        <span class="glyphicon glyphicon-calendar"></span>
                                                    </span>
                                                </div>
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            <label class="control-label col-sm-3" for="Hours">Number Of Dates</label>
                                            <div class="col-sm-8">
                                                <input type="number" id="NumberOfDates" name="NumberOfDates" class="form-control" value="1">
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            @*Span Rows 1 and 2 *@
                            <div class="col-sm-6">
                                <div class="row">
                                    <div id="daysOfWeek" class="col-sm-6">
                                        <ul style="list-style-type:none">
                                            <li><div style="display:flex"><div style="width:30%;float:left">Sunday</div><div style="width:30%"><input id="daylistSunday" name="daylistSunday" type="checkbox" /></div></div></li>
                                            <li><div style="display:flex"><div style="width:30%;float:left">Monday</div><div style="width:30%"><input id="daylistMonday" name="daylistMonday" type="checkbox" /></div></div></li>
                                            <li><div style="display:flex"><div style="width:30%;float:left">Tuesday</div><div style="width:30%"><input id="daylistTuesday" name="daylistTuesday" type="checkbox" /></div></div></li>
                                            <li><div style="display:flex"><div style="width:30%;float:left">Wednesday</div><div style="width:30%"> <input id="daylistWednesday" name="daylistWednesday" type="checkbox" /></div></div></li>
                                            <li><div style="display:flex"><div style="width:30%;float:left">Thursday</div><div style="width:30%"> <input id="daylistThursday" name="daylistThursday" type="checkbox" /></div></div></li>
                                            <li><div style="display:flex"><div style="width:30%;float:left">Friday</div><div style="width:30%"> <input id="daylistFriday" name="daylistFriday" type="checkbox" /></div></div></li>
                                            <li><div style="display:flex"><div style="width:30%;float:left">Saturday</div><div style="width:30%"> <input id="daylistSaturday" name="daylistSaturday" type="checkbox" /></div></div></li>
                                        </ul>
                                    </div>

                                    <div id="dayOfMonth">
                                        <label class="control-label col-sm-3" for="Hours">Month Day</label>
                                        <div class="col-sm-3">
                                            <input type="number" id="DayInMonth" name="DayInMonth" class="form-control" value="18" min="1" max="31">
                                        </div>
                                    </div>

                                    <div id="dayBiMonthly">
                                        <label class="control-label col-sm-3" for="Hours">Day 1</label>
                                        <div class="col-sm-3">
                                            <input type="number" id="DayInMonth" name="DayInMonth" class="form-control" value="18" min="1" max="31">
                                        </div>

                                        <label class="control-label col-sm-3" for="Hours">Day 2</label>
                                        <div class="col-sm-3">
                                            <input type="number" id="DayInMonth" name="DayInMonth" class="form-control" value="18" min="1" max="31">
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="col-sm-12">
                            <div class="btn-group pull-right">
                                <button id="deleteOccurrences" type="button" class="btn btn-default js-deletetasks">Delete All Occurences</button>
                                <button id="insertOccurrences" type="button" class="btn btn-primary js-inserttasks">Insert Occurences</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }

    <ul class="nav nav-tabs">
        <li class="active"><a data-toggle="tab" href="#home">Subtasks</a></li>
        <li><a data-toggle="tab" href="#insertedOcc">Occurrences</a></li>
    </ul>
    <div class="tab-content">
        <div id="home" class="tab-pane fade in active">
            <br />
            <p>@Html.ActionLink("New Subtask", "New", "SubtaskLevel1", new { id = Model.TaskId }, new { @class = "btn btn-primary" })</p>
            <table id="subTasks" class="table table-bordered table-hover" style="width:100%">
                <thead>
                    <tr>
                        <th> </th>
                        <th>Order</th>
                        <th>Name</th>
                        <th>Description</th>
                        <th>Hours</th>
                        <th>Date Created</th>
                        <th>Assigned To</th>
                        <th> </th>
                    </tr>
                </thead>
                <tbody></tbody>
            </table>
        </div>
        <div id="insertedOcc" class="tab-pane fade">
            <br />
            <table id="occurrencesList" class="table table-bordered table-hover" style="width:100%">
                <thead>
                    <tr>
                        <th>Start Date</th>
                        <th>Company</th>
                        <th>Description</th>
                        <th>Status</th>
                    </tr>
                </thead>
                <tbody></tbody>
            </table>
        </div>
    </div>
    
    <br/>
   
    <div class="container">
        <div class="form-group" style="display:block;">
            <div class="col-sm-12">
                <div class="btn-group pull-right">
                    <a id="cancelTrans" class="btn btn-default">Cancel</a>
                    <button type="submit" class="btn btn-primary">Save</button>
                </div>
            </div>
        </div>
    </div>
}

@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function () {

            var taskId = @Html.Raw(Json.Encode(Model.TaskId));

            $('#datetimepicker1').datetimepicker({
                format: "DD/MM/YYYY HH:mm:ss"
            });

            $('#datetimepicker2').datetimepicker({
                format: "DD/MM/YYYY HH:mm:ss"
            });

            $('#datetimepicker3').datetimepicker({
                format: "DD/MM/YYYY HH:mm:ss"
            });

            var table = $("#subTasks").DataTable({
                "paging": false,
                "ordering": true,
                "info": false,
                "searching": false,
                "order": [[0, "asc"]],

                ajax: {
                    url: "/api/subtasklevel1/" + taskId,
                    dataSrc: ""
                },

                columns: [
                    {
                        data: "SubTaskId",
                        render: function (data, type, subtask) {
                            return "<a class='btn btn-primary btn-xs' href='/subtasklevel1/edit/" + subtask.SubTaskId + "'> View </a>";
                        }
                    },
                    {
                        data: "SubTaskOrder"
                    },
                    {
                        data: "SubTaskName",
                    },
                    {
                        data: "SubTaskDescription"
                    },
                    {
                        data: "Hours"
                    },
                    {
                        data: "DateCreated",
                        render: function (data) {
                            return moment(data).format("DD MMM YY");
                        }
                    },
                    {
                        data: "Members.FullName",
                        defaultContent: "<i>Not set</i>"
                    },
                    {
                        data: "SubTaskId",
                        render: function (data) {
                            return "<button class='js-delete btn btn-primary btn-xs' data-subtasklevel1-id=" + data + ">Delete</button>";
                        }
                    }
                ]
            });

            var table2 = $('#occurrencesList').DataTable({
                paging: false,
                ordering: false,
                info: false,
                searching: false,
                ajax: {
                    url: "/api/tasks/" + taskId + "/ancestor",
                    dataSrc: ""
                },
                columns: [
                    {
                        data: "DateCreated",
                        render: function (data) {
                            return moment(data).format("DD MMM YYYY");
                        }
                    },
                    {
                        data: "Company.CompanyName",
                        width: "20%"
                    },
                    {
                        data: "TaskName",
                        width: "40%"
                    },
                    {
                        data: "TaskStatus.TaskStatusName"

                    }
                ]
            });

            $("#subTasks").on("click", ".js-delete", function () {
                var button = $(this);

                bootbox.confirm("Are you sure you want to delete this subtask?", function (result) {
                    if (result) {
                        $.ajax({
                            url: "/api/subtasklevel1/" + button.attr("data-subtasklevel1-id"),
                            method: "DELETE",
                            success: function () {
                                table.row(button.parents("tr")).remove().draw();
                            }
                        });
                    }
                });
            });

            $("#insertOccurrences").click(function () {
                bootbox.confirm("Are you sure you want to generate these occurrences?", function (result) {
                    var myform = document.getElementById("Tasks");
                    var fd = new FormData(myform);
                    if (result) {
                        $.ajax({
                            url: "/api/tasks/" + taskId,
                            data: fd,
                            cache: false,
                            processData: false,
                            contentType: false,
                            type: 'POST',                            
                            success: function () {
                                toastr.success("Occurrences successfully posted.")
                                table2.ajax.reload();                          
                            },
                            error: function () {
                                toastr.error("Something went wrong.");
                            }
                        });
                    }
                });
            });

            $("#deleteOccurrences").click(function () {
                bootbox.confirm("Are you sure you want to delete these occurrences?", function (result) {
                    if (result) {
                        $.ajax({
                            url: "/api/tasks/" + taskId + "/occurrence",
                            type: "DELETE",
                            success: function () {
                                toastr.success("Occurrences successfully deleted.");
                                table2.ajax.reload();                      
                            },
                            error: function () {
                                toastr.error("Something went wrong.");
                            }
                        });
                    }
                });
            });

            $('#RenewalPattern').on('change', function () {
                if (this.value == 0) {
                    $("#daysOfWeek").show();
                    $("#dayOfMonth").hide();
                    $("#dayBiMonthly").hide();
                } else if (this.value == 1) {
                    $("#daysOfWeek").hide();
                    $("#dayOfMonth").hide();
                    $("#dayBiMonthly").hide();
                } else if (this.value == 2) {
                    $("#daysOfWeek").hide();
                    $("#dayOfMonth").show();
                    $("#dayBiMonthly").hide();
                } else if (this.value == 3) {
                    $("#daysOfWeek").hide();
                    $("#dayOfMonth").hide();
                    $("#dayBiMonthly").show();
                } else if (this.value == 4) {
                    $("#daysOfWeek").hide();
                    $("#dayOfMonth").hide();
                    $("#dayBiMonthly").hide();
                }

            })     

            $('#cancelTrans').click(function () {
                goBack();
            });

            function goBack() {
                window.history.back();
            }
        });
    </script>
}

