@model TaskManager.ViewModels.TaskProcedureViewModel
@{
    ViewBag.Title = "TaskProcedures";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Task Procedures Form</h2>
<h4>@Model.TaskProcedureDescription</h4>
<hr />
<br />

@using (Html.BeginForm("Save", "TaskProcedures",
            FormMethod.Post, new { @class = "form-horizontal" }))
{
    @Html.ValidationSummary(true, "Please fix the following errors.")
    <div class="form-group">
        <label class="control-label col-sm-2" for="TaskProcedureOrder">Order</label>
        <div class="col-sm-10">
            @Html.TextBoxFor(t => t.TaskProcedureOrder, new { @class = "form-control" })
            @Html.ValidationMessageFor(t => t.TaskProcedureOrder)
        </div>
    </div>
    <div class="form-group">
        <label class="control-label col-sm-2" for="TaskProcedureDescription">Description</label>
        <div class="col-sm-10">
            @Html.TextAreaFor(t => t.TaskProcedureDescription, new { @class = "form-control" })
            @Html.ValidationMessageFor(t => t.TaskProcedureDescription)
        </div>
    </div>
    <div class="form-group">
        <label class="control-label col-sm-2" for="TaskSteps">Steps</label>
        <div class="col-sm-10">
            @Html.TextAreaFor(t => t.TaskSteps, new { @class = "form-control" })
            @Html.ValidationMessageFor(t => t.TaskSteps)
        </div>
    </div>
    @Html.HiddenFor(t => t.SubTaskId)
    @Html.HiddenFor(t => t.TaskId)
    @Html.HiddenFor(t => t.TaskProcedureId)
    @Html.AntiForgeryToken()

    <div class="form-group" style="display:block;">
        <div class="col-sm-12">
            <div class="btn-group pull-right">
                <a href='@("/SubtaskLevel1/Edit/" + @Model.SubTaskId)' class="btn btn-default">Close</a>
                <button type="submit" class="btn btn-primary">Save</button>
            </div>
        </div>
    </div>
}

<hr />

<h3>Upload Resource Files:</h3>

<hr />

<h4>Video:</h4>

<form id="videoUpload" name="videoUpload" method="post" action="/api/UploadFile" enctype="multipart/form-data">
    <input class="form-control-file" name="video" type="file" />
    <input class="hidden" name="procId" value="@Model.TaskProcedureId" />
    <input class="hidden" name="fileType" value="video" />
    <br />
    <input class="btn btn-primary btn-sm" id="videoButton" type="button" value="Upload" />
</form>

<hr />

<h4>Documents:</h4>

<div class="container border-primary">
    <form id="uploadFile1" method="post" action="/api/UploadFile" enctype="multipart/form-data">
        <input class="form-control-file" name="file" type="file" />
        <input class="hidden" name="procId" value="@Model.TaskProcedureId" />
        <input class="hidden" name="fileType" value="file1" />
        <br />
        <input class="btn btn-primary btn-sm" id="file1" type="button" value="Upload" />
    </form>
</div>
<br />
<hr style="width:50%;" />

<div class="container border-primary">
    <form id="uploadFile2" method="post" action="/api/UploadFile" enctype="multipart/form-data">
        <input class="form-control-file" name="file" type="file" />
        <input class="hidden" name="procId" value="@Model.TaskProcedureId" />
        <input class="hidden" name="fileType" value="file2" />
        <br />
        <input class="btn btn-primary btn-sm" id="file2" type="button" value="Upload" />
    </form>
</div>
<br />
<hr style="width:50%;" />

<div class="container border-primary">
    <form id="uploadFile3" method="post" action="/api/UploadFile" enctype="multipart/form-data">
        <input class="form-control-file" name="file" type="file" />
        <input class="hidden" name="procId" value="@Model.TaskProcedureId" />
        <input class="hidden" name="fileType" value="file3" />
        <br />
        <input class="btn btn-primary btn-sm btn" id="file3" type="button" value="Upload" />
    </form>
</div>

@section scripts
{
    <script>
        var myform = document.getElementById("videoUpload");
        var fd = new FormData(myform);

        $('#TaskSteps').summernote({
            height: 300
        });

        $('#videoButton').on('click', function () {
            myform = document.getElementById("videoUpload");
            fd = new FormData(myform);
            uploadFile();
        });

        $('#file1').on('click', function () {
            myform = document.getElementById("uploadFile1");
            fd = new FormData(myform);
            uploadFile();
        });

        $('#file2').on('click', function () {
            myform = document.getElementById("uploadFile2");
            fd = new FormData(myform);
            uploadFile();
        });

        $('#file3').on('click', function () {
            myform = document.getElementById("uploadFile3");
            fd = new FormData(myform);
            uploadFile();
        });

        function uploadFile() {
            $.ajax({
                // Your server script to process the upload
                url: '/api/UploadFile',
                type: 'POST',

                // Form data
                data: fd,

                // Tell jQuery not to process data or worry about content-type
                cache: false,
                contentType: false,
                processData: false,

                // Custom XMLHttpRequest
                xhr: function () {
                    var myXhr = $.ajaxSettings.xhr();
                    if (myXhr.upload) {
                        // For handling the progress of the upload
                        myXhr.upload.addEventListener('progress', function (e) {
                            if (e.lengthComputable) {
                                $('progress').attr({
                                    value: e.loaded,
                                    max: e.total,
                                });
                            }
                        }, false);
                    }
                    return myXhr;
                },
            })
                .done(function () {
                    console.log("done");
                    toastr.success("Upload successful.");
                })
                .fail(function () {
                    toastr.error("Something unexpected happened.");
                });;
        }
    </script>
}